version: '2.3'
services:
# Components we own
  deus-server:
    image: "alexeyeremin/deus-server"
    networks:
      - overlay
    ports:
     - "8157:8157"
    environment:
      - COUCHDB_USER
      - COUCHDB_PASSWORD
      - PUSH_USER
      - PUSH_PASSWORD
      - PUSH_SERVERKEY
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8157/time"]
    depends_on:
      deus-couchdb-init:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
  deus-worker-manager:
    image: "alexeyeremin/deus-worker-manager"
    volumes:
      - type: volume
        source: models_src
        target: /deus-models
        read_only: true
    networks:
      - overlay
    environment:
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    depends_on:
      deus-couchdb-init:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
  deus-models:
    image: "alexeyeremin/deus-models"
    volumes:
      - type: volume
        source: models_src
        target: /app
  deus-qr-lib:
    image: "alexeyeremin/deus-qr-lib"
    networks:
      - overlay
    ports:
      - "8159:8159"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8159/"]
  deus-couchdb-init:
    image: "alexeyeremin/deus-couchdb-init"
    volumes:
      - type: volume
        source: models_src
        target: /deus-models
        read_only: true
    networks:
      - overlay
    environment:
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    depends_on:
      couchdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
# Components we don't own, but depend on
# CouchDB
  couchdb:
    image: "apache/couchdb"
    environment:
      - COUCHDB_USER
      - COUCHDB_PASSWORD
    networks:
      - overlay
    ports:
     - "5988:5984" # Remove when using in prod
    volumes:
      - type: volume
        source: couchdb_data
        target: /opt/couchdb/data
        volume:
          nocopy: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/_up"]
# ELK stack (Elasticksearch + Logstash + Kibana)
  elasticsearch:
    build:
      context: ./elk/elasticsearch/
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - overlay
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/"]
  logstash:
    build:
      context: ./elk/logstash/
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - overlay
    depends_on:
      - elasticsearch
  kibana:
    build:
      context: ./elk/kibana/
    volumes:
      - ./elk/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - overlay
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/status"]
    depends_on:
      - elasticsearch

volumes:
  couchdb_data:
    external: true
  models_src:
  elasticsearch_data:
    external: true

networks:
  overlay:

